{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/vim","result":{"data":{"brainNote":{"slug":"vim","title":"Vim Resources","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Vim Resources\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://devhints.io/vimscript\"\n  }), \"Vim Scripting Cheatsheet\"))), mdx(\"h3\", null, \"Maintenance\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.tmux/resurrect\"), \" stores the state files for resurrect and continuum\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.vim/views/*\"), \" stores the states files for folds -- primarily vim\")), mdx(\"h3\", null, \"Useful debugging tips:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":scriptnames\"), \" see every relevant file that has been called to reach current state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":verbose set background\"), \"find what file set a variable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://vi.stackexchange.com/questions/7722/how-to-debug-a-mapping\",\n    target: \"_blank\"\n  }, \"How to Debug a Mapping!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://stackoverflow.com/questions/3495124/not-reading-vimrc\",\n    target: \"_blank\"\n  }, \"Finding what set a vim variable\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rm ~/.vim/view/*</code>\"), \" - delete saved view/fold settings (they may change settings).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vim --startuptime timecost.txt [file-to-open]\"), \" - see times on different aspects of load\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://vimcolors.com/621/breezy/dark\",\n    target: \"_blank\"\n  }, \"Breezy VimColors\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://www.cs.swarthmore.edu/help/vim/variables.html\",\n    target: \"_blank\"\n  }, \"Checking Vim current variable values\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://blog.ezyang.com/2010/03/vim-textwidth/\",\n    target: \"_blank\"\n  }, \"Vim Textwidth\"))), mdx(\"h4\", null, \"Checking what actions are slowing vim down\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":profile start profile.log\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":profile func *\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"At this point, do the slow actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", null, \":profile pause\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", null, \"noautocmd qall!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://stackoverflow.com/questions/12213597/how-to-see-which-plugins-are-making-vim-slow\",\n    target: \"_blank\"\n  }, \"Source\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://stackoverflow.com/questions/20988343/alert-developer-tools-access-needs-to-take-control-of-another-process-for-debugg\",\n    target: \"_blank\"\n  }, \"This\"), \" helps with solving the developer tools access problem with Conque-GDB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://www.bestofvim.com\",\n    target: \"_blank\"\n  }, \"Best of Vim\"))), mdx(\"h3\", null, \"Plugins\"), mdx(\"h4\", null, \"Plugin Managers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pathogen \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vundle - based off of Pathogen, manages installing and local storage, can do \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"everything\"), \" Pathogen can do\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"http://vimawesome.com\",\n    target: \"_blank\"\n  }, \"Vim Awesome.com\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/vim-airline/vim-airline\",\n    target: \"_blank\"\n  }, \"Vim Airline\"))), mdx(\"h3\", null, \"Folds\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"syntax\"), \" for most languages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"indent\"), \" for Python and HTML\")), mdx(\"h3\", null, \"ftplugin\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ftplugin allows you to specify more specific settings per file(type)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"set\"), \" should be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setlocal\"), \" in these files, or these edge case settings will \\\"leak\\\" out.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"to force reload \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ftplugin/*.vim\"), \" files, use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":set filetype={{extension}}\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"aeonneo's notes"}}},"pageContext":{"slug":"vim"}}}